     1                                  bits 32
     2                                  global start
     3                                  extern exit
     4                                  import exit from msvcrt.dll
     5                                  segment data use32 class=data:
     6 00000000 31333537                    s1 db '1357'
     7                                      lens1 equ $-s1
     8 00000004 32363934                    s2 db '2694'
     9                                      ;the length of s2 is equal to the length of s1
    10 00000008 00<rept>                    d times lens1*2 db 0
    11                                      
    12                                  segment code use 32 class=code:
    13                                  start:
    14                                  ;Se dau doua siruri de octeti S1 si S2 de aceeasi lungime. Sa se obtina sirul D prin intercalarea elementelor celor doua siruri. 
    15                                  ;Exemplu:
    16                                  ;S1: 1, 3, 5, 7
    17                                  ;S2: 2, 6, 9, 4
    18                                  ;D: 1, 2, 3, 6, 5, 9, 7, 4
    19 00000000 BE00000000                  mov ESI,0
    20                                      ;we solve this problem by considerring ESI the index from where we take
    21                                      ;the values. It will increase after we have put the value from s1 in d and we have taken the value from s2(before we put it in d)
    22                                      
    23 00000005 BF[08000000]                mov EDI,d ;in EDI we consider offset of the current byte from d
    24                                      ;we do a loop with lens1*2(=6 in pur caase)iterations. At each iteration
    25                                      ;we move the byte from s1 from the position ESI (i.e. the offset [s1+ESI]
    26                                      ;and move it into the offset EDI. Then we increase the offset EDi and then
    27                                      ;we move the byte from s2 from position ESI(i.e. the offset[s2+ESI] into
    28                                      ;the current offset EDI and then increase it as well. And then we increase ESI. In order for the jump 
    29                                      ;to happen, ESI<lens1*2
    30                                      ;So, in this loop ESI will have the values:{0,1,2,3} and
    31                                      ;EDI:{[s2+0],[s2+1],[s2+2],[s2+3],[s2+4],[s2+5],[s2+6],[s2+7]}
    32 0000000A FC                          cld
    33                                      repeat:
    34 0000000B 8A86[00000000]                  mov AL,[s1+ESI] ;AL<-the byte from offset s1+ESI
    35 00000011 AA                              stosb ;<=> mov EDI,AL(i.e. AL->the byte from the offset s1+ESI)
    36                                                 ; inc EDI
    37 00000012 8A86[04000000]                  mov AL,[s2+ESI] ;AL<-the byte from offset s2+ESI
    38 00000018 AA                              stosb 
    39 00000019 46                              inc ESI
    40 0000001A 83FE08                          cmp ESI,lens1*2
    41 0000001D 72EC                            jb repeat ;if(ESI<lens1*2) jump to repeat
    42                                                    ;otherwise continue below
    43 0000001F 6A00                        push dword 0
    44 00000021 FF15[00000000]              call[exit]
    45                                      
